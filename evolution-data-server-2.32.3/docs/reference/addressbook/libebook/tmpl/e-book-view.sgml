<!-- ##### SECTION Title ##### -->
EBookView

<!-- ##### SECTION Short_Description ##### -->
Represents a search against an #EBook.

<!-- ##### SECTION Long_Description ##### -->
<para>
Event notifications and callbacks from #EBookView go to the
#EBookViewListener. Contrast #EBookView with #EBook, which represents the
addressbook itself.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#EBookViewListener, #EBook.
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### STRUCT EBookView ##### -->
<para>
#EBookView has no publicly available members.
</para>


<!-- ##### SIGNAL EBookView::contacts-added ##### -->
<para>
Fired when more contacts are found.  Each contact in the list will be unref'd
when done, and the list freed, so simply reference any contacts you want to
keep.
</para>

@ebookview: the object which received the signal.
@arg1: a #GList of #EContact objects that were added to the view

<!-- ##### SIGNAL EBookView::contacts-changed ##### -->
<para>
Fired when contacts are changed.  Each contact in the list will be unref'd
when done, and the list freed, so simply reference any contacts you want to
keep.
</para>

@ebookview: the object which received the signal.
@arg1: a #GList of #EContact objects that were modified

<!-- ##### SIGNAL EBookView::contacts-removed ##### -->
<para>
Fired when contacts are removed from the view.  The IDs and the list will be
freed, so copy any IDs you want to keep.
</para>

@ebookview: the object which received the signal.
@arg1: a #GList of contact IDs (char*) that were removed from the view

<!-- ##### SIGNAL EBookView::sequence-complete ##### -->
<para>
Fired when there are currently no more contacts to send.  This is fired once
after the initial set of #contacts-added signals, and after every future change.
</para>

@ebookview: the object which received the signal.
@arg1: an #EBookViewStatus

<!-- ##### SIGNAL EBookView::status-message ##### -->
<para>
Fired with a status message reporting the progress of the view.
</para>

@ebookview: the object which received the signal.
@arg1: a const char* message

<!-- ##### SIGNAL EBookView::view-complete ##### -->
<para>

</para>

@ebookview: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### FUNCTION e_book_view_start ##### -->
<para>

</para>

@book_view: 


<!-- ##### FUNCTION e_book_view_stop ##### -->
<para>

</para>

@book_view: 


<!-- ##### FUNCTION e_book_view_get_book ##### -->
<para>

</para>

@book_view: 
@Returns: 


